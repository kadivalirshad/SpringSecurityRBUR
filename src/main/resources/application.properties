spring.application.name=SpringSecurityRBUR

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/RBUR
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.show-sql=true

jwtkey="daf66e01593f61a15b857cf433aae03a005812b31234e149036bcc8dee755dbb";

#Google Login
spring.security.oauth2.client.registration.google.client-id=xxxxxx
spring.security.oauth2.client.registration.google.client-secret=xxxxxxx

#GitHub Login
spring.security.oauth2.client.registration.github.client-id=xxxxxxxx
spring.security.oauth2.client.registration.github.client-secret=xxxxxxxx

#LinkedIn Login
spring.security.oauth2.client.registration.linkedin.client-id=xxxxxx
spring.security.oauth2.client.registration.linkedin.client-secret=xxxxxx
spring.security.oauth2.client.registration.linkedin.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.scope=profile,email,openid
spring.security.oauth2.client.registration.linkedin.redirect-uri=http://localhost:8080/login/oauth2/code/linkedin
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/userinfo
spring.security.oauth2.client.provider.linkedin.jwk-set-uri=https://www.linkedin.com/oauth/openid/jwks
spring.security.oauth2.client.provider.linkedin.user-name-attribute=sub




logging.level.org.springframework.security=DEBUG


